# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

stages:
- stage: 'Build'
  displayName: 'Build and publish application'
  jobs:
  - job: build_and_publish
    pool:
      vmImage: 'windows-2019'
    steps:
    - task: DotNetCoreCLI@2
      displayName: Build the project
      inputs:
        command: 'build'
        arguments: '--configuration release'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: Run Unit Tests
      inputs:
        command: 'test'
        projects: '**/Ana.ToDo.FunctionApp.UnitTests.csproj'
        arguments: '--configuration release --collect "Code coverage"'
        publishTestResults: true
           
    - task: DotNetCoreCLI@2
      displayName: Publish the project
      inputs:
        command: 'publish'
        projects: '**/Ana.ToDo.FunctionApp.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration release --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop

- stage: 'Production'
  displayName: 'Deploy to PROD environment'
  dependsOn: Build
  jobs:
  - deployment: deploy_to_prod
    pool:
      vmImage: 'windows-2019'
    environment: Test
    variables:
        - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            patterns: '**/*.zip'
          - task: CmdLine@2
            inputs:
              script: |
                echo Pipeline.Workspace
                cd $(Pipeline.Workspace)
                ls
          - task: CmdLine@2
            inputs:
              script: |
                echo Build.SourcesDirectory
                cd $(Build.SourcesDirectory)
                ls
          - task: AzureResourceManagerTemplateDeployment@3
            displayName: Deploy Infrustructure from ARM Template 
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'ToDoConnection'
              subscriptionId: '36d3687c-f042-4575-a046-b95c67efc8ca'
              action: 'Create Or Update Resource Group'
              resourceGroupName: 'rg-todoapp-prod'
              location: 'East US 2'
              templateLocation: 'Linked artifact'
              csmFile: '$(System.DefaultWorkingDirectory)/ARM Templates/arm_rg.json'
              csmParametersFile: '$(System.DefaultWorkingDirectory)/ARM Templates/armparameters.json'
              overrideParameters: '-myConnectionString "$(MyConnectionString)" -resourceGroupName "rg-todoapp-prod" -subscriptionId "$(SubscriptionId)" -administratorLogin "$(AdministratorLogin)" -administratorLoginPassword "$(AdministratorPassword)" -serverName "sql-todoapp-prod" -hostingPlanName "plan-todoapp-prod" -appInsightsName "appi-todoapp-prod" -service_ToDoAppAPIManagement_name "apim-todoapp-prod" -appName "func-todoapp-prod"'
              deploymentMode: 'Incremental'