# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UseDotNet@2
  inputs:
    version: '3.0.x'
    packageType: runtime
    
- task: DotNetCoreCLI@2
  displayName: Build the project
  inputs:
    command: 'build'
    arguments: '--configuration release'
    projects: 'test_api.csproj'

- task: DotNetCoreCLI@2
  displayName: Publish the project
  inputs:
    command: 'publish'
    projects: 'test_api.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration release --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

- publish: '$(Build.ArtifactStagingDirectory)'
  artifact: drop

- task: AzureWebApp@1
  displayName: 'Azure App Service Deploy: website'
  inputs:
    azureSubscription: 'ToDoConnection'
    appType: 'webAppLinux'
    appName: '$(WebAppName)'
    package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'
- task: AzureFunctionApp@1
  displayName: Deploy Azure Function
  inputs:
    azureSubscription: 'ToDoConnection'
    appType: 'functionAppLinux'
    appName: '$(WebAppName)'
    package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'



