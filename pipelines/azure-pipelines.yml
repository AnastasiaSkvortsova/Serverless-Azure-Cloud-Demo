# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

stages:
- stage: 'Build'
  displayName: 'Build and publish application'
  jobs:
  - job: build_and_publish
    pool:
      vmImage: 'windows-2019'
    steps:
    - task: DotNetCoreCLI@2
      displayName: Build the project
      inputs:
        command: 'build'
        arguments: '--configuration release'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: Run Unit Tests
      inputs:
        command: 'test'
        projects: '**/Ana.ToDo.FunctionApp.UnitTests.csproj'
        arguments: '--configuration release --collect "Code coverage"'
        publishTestResults: true
           
    - task: DotNetCoreCLI@2
      displayName: Publish the project
      inputs:
        command: 'publish'
        projects: '**/Ana.ToDo.FunctionApp.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration release --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop

- stage: 'Production'
  displayName: 'Deploy to PROD environment'
  dependsOn: Build
  jobs:
  - deployment: deploy_to_prod
    pool:
      vmImage: 'windows-2019'
    environment: ApprovalRequired
    variables:
        - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            patterns: '**/*.zip'
          - script: ls
          - script: 
              cd $(System.ArtifactsDirectory)
              ls
          - script: 
              cd $(ReleaseArtifactDirectory)
              ls
          - script: 
              cd $(Build.SourcesDirectory)
              ls
          - template: deploymentTemplate.yml
            parameters: 
              Env: prod