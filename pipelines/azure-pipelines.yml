# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

stages:
- stage: 'Build'
  displayName: 'Build and publish application'
  jobs:
  - job: build_and_publish
    pool:
      vmImage: 'windows-2019'
    steps:
    - task: DotNetCoreCLI@2
      displayName: Build the project
      inputs:
        command: 'build'
        arguments: '--configuration release'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: Run Unit Tests
      inputs:
        command: 'test'
        projects: '**/Ana.ToDo.FunctionApp.UnitTests.csproj'
        arguments: '--configuration release --collect "Code coverage"'
        publishTestResults: true
           
    - task: DotNetCoreCLI@2
      displayName: Publish the project
      inputs:
        command: 'publish'
        projects: '**/Ana.ToDo.FunctionApp.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration release --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop

- stage: 'Test'
  displayName: 'Deploy to TEST environment'
  dependsOn: Build
  jobs:
  - job: deploy_to_test
    pool:
      vmImage: 'windows-2019'
    variables:
        - group: Release
    steps:
    - download: current
      patterns: '**/*.zip'
      
    - template: deploymentTemplate.yml
      parameters: 
        Env: test

    - task: DotNetCoreCLI@2
      displayName: Run Data Base Tests
      inputs:
        command: 'test'
        projects: '**/Ana.ToDo.FunctionApp.IntegrationTests.csproj'
        arguments: '--configuration release --filter "ClassName=Ana.Todo.FunctionApp.IntegrationTests.DBTests"'

    - task: DotNetCoreCLI@2
      displayName: Run API Tests
      inputs:
        command: 'test'
        projects: '**/Ana.ToDo.FunctionApp.IntegrationTests.csproj'
        arguments: '--configuration release --filter "ClassName=Ana.Todo.FunctionApp.IntegrationTests.APITests.ToDoItemTests"'
        
    - task: AzureCLI@2
      displayName: Drop Test Environment 
      inputs:
        azureSubscription: 'ToDoConnection'
        scriptType: 'ps'
        scriptLocation: 'inlineScript'
        inlineScript: 'az group show -n rg-todoapp-test'

- stage: 'Stage'
  displayName: 'Deploy to STAGE environment'
  dependsOn: Test
  jobs:
  - job: deploy_to_stage
    pool:
      vmImage: 'windows-2019'
    variables:
        - group: Release
    steps:
    - download: current
      patterns: '**/*.zip'
      
    - template: deploymentTemplate.yml
      parameters: 
        Env: stage

- stage: 'Production'
  displayName: 'Deploy to PROD environment'
  dependsOn: Stage
  jobs:
  - job: deploy_to_prod
    dependsOn: approval
    pool:
      vmImage: 'windows-2019'
    variables:
        - group: Release
    steps:
    - download: current
      patterns: '**/*.zip'
      
    - template: deploymentTemplate.yml
      parameters: 
        Env: prod